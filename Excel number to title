Given a positive integer, return its corresponding column title as appear in an Excel sheet.

For example:

    1 -> A
    2 -> B
    3 -> C
    ...
    26 -> Z
    27 -> AA
    28 -> AB 
    ...
Example 1:

Input: 1
Output: "A"
Example 2:

Input: 28
Output: "AB"
Example 3:

Input: 701
Output: "ZY"


IMP -> This question is about converting a base 10 number to base 26.
NOTE-> HOWEVER ALL BASES START FROM 0 (BASED INDEXING TO) * WHERE * IS THE MAXIMUM LIMIT. IN OUR CASE, * IS 26.
HOWEVER, ACCORDING TO THE QUESTION, SINCE "A" STARTS FROM 1 BASED INDEXING, WE NEED TO CONVERT IT TO 0 BASED INDEXING. 
FOR THIS PURPOSE, WE ALWAYS DO N-1 IN THE FOR LOOP!!!

https://www.youtube.com/watch?v=hIs3A6gGz2w

TO UNDERSTAND WHY WE NEED 0 BASED INDEXING IN NUMBER SYSTEM, THINK OF THE FACT THAT AFTER EVERY 26 CHARACTERS, WE WILL AGAIN
REPEAT THE CYCLE I.E THE PERIOD IS 26. NOW IF WE TAKE HAVE N=26, AND WE DO N%26, WE WILL GET N%26 = 0 WHICH SHOULD HAVE BEEN
"Z" BUT WE GET 0 INDEX WHICH DOESN'T EVEN EXIST.
WE CANNOT DO MOD WITH 27, BECAUSE THAT IT THE INCORRECT PERIOD(IT IS 26) AND SO, IF WE WILL GET CORRECT OUTPUT AS "Z" FOR N=26
BUT WHAT IF WE HAVE N = 27. HERE, O/P SHOULD BE AA, BUT WE WILL GET N%27 = 0 WHICH WILL ONLY GIVE US "A". SINCE N//27 = 0,
SO WE WON'T GET "AA".

BUT IF WE TAKE (N-1) % 26, WE WILL ALWAYS GET THE CORRECT O/P.

CONCLUSION -> WHENEVER CONVERTING FROM DECIMAL TO A DIFFERENT SYSTEM, ENSURE THAT THE INDEXING IS 0 BASED AND ALWAYS TAKE 
% WITH THE PERIOD!!!
IF INDEXING IS NOT STARTING FROM 0, THEN ALWAYS DO N-1 OR N-2 OR N-* WHERE * IS WHATEVER THE DIFFERENCE IS BETWEEN 0 AND THE 
STARTING INDEXING GIVEN IN QUESTION.
 IN OUR CASE IT IS 1, SINCE A->1.

class Solution:
    # @return a string
    def convertToTitle(self, num):
        capitals = [chr(x) for x in range(ord('A'), ord('Z')+1)]
        result = []
        while num > 0:
            result.append(capitals[(num-1)%26])
            num = (num-1) // 26
        result.reverse()
        return ''.join(result)
