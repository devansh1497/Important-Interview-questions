
Given a string containing only three types of characters: '(', ')' and '*', write a function to check whether this string is valid. We define the validity of a string by these rules:

Any left parenthesis '(' must have a corresponding right parenthesis ')'.
Any right parenthesis ')' must have a corresponding left parenthesis '('.
Left parenthesis '(' must go before the corresponding right parenthesis ')'.
'*' could be treated as a single right parenthesis ')' or a single left parenthesis '(' or an empty string.
An empty string is also valid.

class Solution {
    public boolean checkValidString(String s) {
        int left = 0, right = 0, leftx = 0, rightx = 0;
        for (int i=0; i<s.length(); i++){
            if (s.charAt(i) == '(') left++;
            else if (s.charAt(i) == ')') left--;
            else leftx++;            
            if (left < 0){
                if (leftx == 0) return false;
                else{
                    leftx--;
                    left++;
                }
            }
        }
        for (int i=s.length()-1; i>=0; i--){
            if (s.charAt(i) == '(') right--;
            else if (s.charAt(i) == ')') right++;
            else rightx++;
            if (right < 0){
                if (rightx == 0) return false;
                else{
                    rightx--;
                    right++;
                }
            }
        }
        return true;
    }
}
