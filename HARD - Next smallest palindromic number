Given a number, in the form of an array a[] containing digits from 1 to 9(inclusive). The task is to find the next smallest palindrome larger than this number.

Input :
The first line is number of test cases T. Every testcase contains two lines. The first line contains the size of the array, second line contains the digits of the number separated by space.

Output:
In each separate line print the digits of palindrome with spaces in between.

Constraints:
1<=T<=100
1<=n<=1000
1<=a[i]<=9

Example:
Input:
1
11
9 4 1 8 7 9 7 8 3 2 2

Output:
9 4 1 8 8 0 8 8 1 4 9


#code

def convertListToInt(l):
    mul = len(l) - 1
    ans = 0
    for i in l:
        ans += i * 10**mul
        mul -= 1
    return ans
    
def toPalindrome(l):
    n = len(l)
    mid = n//2
    left = l[:mid]
    if not n&1:
        return left + left[::-1]
    return left + [l[mid]] + left[::-1]
    
def incrementNumber(l):
    n = len(l)
    if n&1:
        i = n//2
    else:
        i = n//2-1
    
    while i >= 0:
        if l[i]+1 > 9:
            l[i] = 0
            i-=1
        else:
            l[i]+=1
            break
    
    return toPalindrome(l)
    

def nextHighestPalindrome(l):
    org = [i for i in l]
    if min(l) == max(l) == 9:
        return [1] + [0]*(len(l)-1) + [1]
        
    palindromeNumber = toPalindrome(l)
    if convertListToInt(palindromeNumber) > convertListToInt(org):
        return palindromeNumber
    
    return incrementNumber(l)
    

t = int(input())
for _ in range(t):
    n = int(input())
    l = list(map(int, input().split()))
    print(' '.join(map(str,nextHighestPalindrome(l))))
    
    
