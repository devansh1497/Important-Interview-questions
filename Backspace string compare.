Given two strings S and T, return if they are equal when both are typed into empty text editors. # means a backspace character.

Note that after backspacing an empty text, the text will continue empty.

Example 1:

Input: S = "ab#c", T = "ad#c"
Output: true
Explanation: Both S and T become "ac".
Example 2:

Input: S = "ab##", T = "c#d#"
Output: true
Explanation: Both S and T become "".
Example 3:

Input: S = "a##c", T = "#a#c"
Output: true
Explanation: Both S and T become "c".
Example 4:

Input: S = "a#c", T = "b"
Output: false
Explanation: S becomes "c" while T becomes "b".


class Solution:
    def backspaceCompare(self, S: str, T: str) -> bool:
        # print(max(0,len(S)-2*S.count('#')),max(0,len(T)-2*T.count('#')))
        # if max(0,len(S)-2*S.count('#')) != max(0,len(T)-2*T.count('#')):
        #     return False
        
        m = len(S)
        n = len(T)
        # 7-2(3)       8-2*4
        
        i = m-1
        j = n-1
        
        while i >= 0 or j >= 0:
            b_i = 0
            b_j = 0
            while i >= 0:
                if S[i] == '#':
                    b_i+=1
                    i-=1
                elif b_i > 0:
                    i-=1
                    b_i-=1
                else:
                    break
                    
            while j >= 0:
                if T[j] == '#':
                    b_j+=1
                    j-=1
                elif b_j > 0:
                    j-=1
                    b_j-=1
                else:
                    break
                    
            if i >= 0 and j >= 0 and S[i] != T[j]:
                return False
            if (i >= 0 and j < 0) or (j >= 0 and i < 0):
                return False
            i-=1
            j-=1
        return True
