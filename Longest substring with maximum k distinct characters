
Given a string, find the length of the longest substring T that contains at most k distinct characters.

Example 1:

Input: s = "eceba", k = 2
Output: 3
Explanation: T is "ece" which its length is 3.
Example 2:

Input: s = "aa", k = 1
Output: 2
Explanation: T is "aa" which its length is 2.


 public int lengthOfLongestSubstringKDistinct(String s, int k) {
        int l = 0, cntDif = 0;
        int[] map = new int[256];
        int result = 0;

        for (int r = 0; r < s.length(); r++) {
            map[s.charAt(r)]++;
            if (map[s.charAt(r)] == 1) {
                cntDif++;
            }
            if (cntDif <= k) {
                result = Math.max(result, r - l + 1);
            }
            while (cntDif > k) {
                map[s.charAt(l)]--;
                if (map[s.charAt(l)] == 0) {
                    cntDif--;
                }
                l++;
            }
        }
        return result;
    }
